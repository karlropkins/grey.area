% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo.tools.R
\name{geo.tools}
\alias{geo.tools}
\alias{geoFrame}
\alias{geoBearing}
\alias{geoDistance}
\alias{geoElevation}
\alias{geoDestination}
\alias{geoConvertBNG2LatLon}
\alias{geoConvertLatLonDeg2Dec}
\alias{geoConvertLatLonDec2Deg}
\title{grey.area geo tools}
\usage{
geoFrame(lat, lon = NULL, ..., pair.lat.lon = TRUE)

geoBearing(lat, lon = NULL, ...)

geoDistance(lat, lon = NULL, units = "m", ...)

geoElevation(
  lat,
  lon = NULL,
  units = "m",
  ...,
  method = "google.elevation",
  n = 10
)

geoDestination(
  lat,
  lon = NULL,
  bearing = NULL,
  distance = NULL,
  units = "m",
  ...
)

geoConvertBNG2LatLon(east, north = NULL, ..., crs = 27700)

geoConvertLatLonDec2Deg(lat, lon = NULL, ..., format = NULL, test = TRUE)
}
\arguments{
\item{lat, lon}{Latitudes and longitudes to be used in geographical
calculations. Note: This can be supplied as two vectors or as a
list or data.frame containing lat and lon vectors.}

\item{...}{Additional arguments, currently ignored.}

\item{pair.lat.lon}{(Logical) Should \code{lat} and \code{lon}
be paired? If \code{TRUE} (as in default) \code{lat} and \code{lon}
series lengths are matched and extra values are discarded.}

\item{units}{(Character) The units that results should be reported in.
For, geoDistance, \code{geoElevation} and \code{geoDestination},
the current options are (the default) \code{"m"} and \code{"km"}.}

\item{method}{(For \code{geoElevation}) the elevation method.
Currently, the only enabled option is \code{'google.elevation'}
which uses the Google Elevation API.}

\item{n}{(For \code{geoElevation}) the single request size limit.
Some elevation data request methods cannot handle large numbers of
\code{lat, lon} at a go. So, where this is case \code{geoElevation}
generates and merges multiple requests. \code{n} sets the maximum
number of \code{lat, lon} per request.}

\item{bearing, distance}{(For \code{geoDestination}) the bearing
(relative to North) and distance to move from the start point
\code{lat}, \code{lon}.}

\item{crs}{(For \code{geoConvertBNG2LatLon}) the
coordinate reference system for supplied \code{easting}
and \code{northing}, by default 27700, the EPSG code
for British National Grid coordinates.}

\item{format}{(For \code{geoConvertLatLonDev2Deg}) formatting for supplied
\code{lat} and \code{lon} assumed to be supplied in degrees (deg/min/sec)
format. The default \code{NULL} assumes \code{lat} and \code{lon} are not
formatted.}

\item{test}{(For \code{geoConvertLatLonDev2Deg}) test supplied \code{lat}
and \code{lon} coordinates before converting. This generates a WARNING only
if any look like a suspect case for conversion, e.g a \code{lat > 90},
\code{lon > 180}, degrees > 60, etc...}

\item{easting, northing}{(For \code{geoConvertBNG2LatLon})
Easting and Northing coordinates.}
}
\value{
\code{geoFrame} is data handler used by other geo...
functions. It returns a list containing the named components
\code{lat} and \code{lon}. if latitude, longitude pairing has
been applied \code{pair.lat.lon = TRUE} these components will
be the same length.

\code{geoBearing} returns a vector of bearings for supplied lat, lon
combinations. NOTE: Bearings length will be one less than the length
number of lat (or lon) because bearings are measured prior point to
latter point.

\code{geoDistance} returns a vector of distances between supplied lat,
lon points in a supplied series, so again one less the supplied number
of points. By default, this will be supplied in meters, but units can
be modified as part of the call using, e.g. \code{units = "km"} to get
distance(s) in kilometers.

\code{geoElevation} returns a vector of elevations, one for each
lat, lon pair supplied. By default, this will be supplied in meters,
but units can be modified as part of the call using, e.g.
\code{units = "km"} to get elevations(s) in kilometers.

\code{geoDestination} returns a list of named lat/lon pairs for
the path from the supplied lat/lon start point, assuming the
journey described by the supplied bearings and distance.

\code{geoConvertBNG2LatLon} converts British National
Grid (BNG) Easting/Northing coordinates to (WGS84)
Latitude/Longitude coordinates.

\code{geoConvertLatLonDeg2Dem} converts Latitude/Longitude coordinates
logged in degrees to decimal.
}
\description{
Some functions for use with (latitude, longitude)
coordinates.
}
\note{
All functions currently require or convert to
\code{lat} and \code{lon} in WGS84 coordinates and
conventional decimal format.

\code{geoBearing} DETAILS NEEDED.

\code{geoDistance} uses the haversine formula to account to the
Earth's surface curvature, and uses 6371 km as the radius of earth.

\code{geoElevation} uses the Google elevation API to get elevations,
so required R to be internet enabled.

\code{geoDestination} DETAILS NEEDED.
}
\examples{
#example 1
lat <- 1:10
lon <- 1:10
#get the distance point1 to point2, point2 to point2, etc.
dist <- geoDistance(lat, lon)
#get the bearing point1 to point2, point2 to point2, etc.
bear <- geoBearing(lat, lon)
#reconstruct the journey from start point,
#using distances and bearings
geoDestination(lat[1], lon[1], bear, dist)
#(very nearly...)
}
\author{
Karl Ropkins
}
\keyword{methods}
